{"version":3,"sources":["styles.module.css","ContactForm-ui/ContactForm.js","Filter-ui/filter.js","ContactList-ui/ContactList.js","App.js","index.js","ContactForm-ui/contact-form.module.css","ContactList-ui/contact-list.module.css","Filter-ui/filter.module.css"],"names":["module","exports","Form","state","name","number","onSubmitHandler","e","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","setState","handleChange","target","value","className","styles","form","this","autoComplete","label","input","type","pattern","title","required","onChange","button","Component","Filter","ContactList","filteredContacts","onDelete","list","map","item","onClick","App","contacts","filter","setContact","sameContact","find","prevContact","alert","prevState","changeFilter","onDeleteContact","contactsFromLocal","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","toLowerCase","includes","container","ContactForm","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24c55fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__6L65m\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './contact-form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onSubmitHandler = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.onSubmit(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className={styles.form}\n        onSubmit={this.onSubmitHandler}\n        autoComplete=\"off\"\n      >\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            value={this.state.number}\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport styles from './filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contact-list.module.css';\n\nconst ContactList = ({ filteredContacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(contact => {\n        return (\n          <li className={styles.item} key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => {\n                onDelete(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport ContactForm from './ContactForm-ui/ContactForm';\nimport Filter from './Filter-ui/filter';\nimport ContactList from './ContactList-ui/ContactList';\nimport styles from './styles.module.css';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsFromLocal = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsFromLocal) {\n      this.setState({ contacts: contactsFromLocal });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  setContact = contact => {\n    const sameContact = this.state.contacts.find(\n      prevContact => prevContact.name === contact.name,\n    );\n\n    if (sameContact) {\n      alert(`${sameContact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  onDeleteContact = id => {\n    this.setState(prevState => {\n      const { contacts } = prevState;\n      const filteredContacts = contacts.filter(contact => contact.id !== id);\n      return {\n        contacts: filteredContacts,\n      };\n    });\n  };\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.setContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDelete={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contact-form_form__3H0lR\",\"label\":\"contact-form_label__2MVod\",\"input\":\"contact-form_input__3L0nv\",\"button\":\"contact-form_button__2QUTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contact-list_list__-SKDj\",\"item\":\"contact-list_item__eV5Bq\",\"button\":\"contact-list_button__2FT3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3-iS0\",\"input\":\"filter_input__3NYri\"};"],"sourceRoot":""}